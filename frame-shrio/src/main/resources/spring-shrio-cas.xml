<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/util
     http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-lazy-init="true">
<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager" />
    <!-- 设定角色的登录链接，这里为cas登录页面的链接可配置回调地址 -->
    <property name="loginUrl" value="${cas.server}/login?service=${cas.client}/login/" />
    <property name="successUrl" value="${cas.client}/index1.html"></property>
    <property name="filters">
        <util:map>
            <entry key="casFilter" value-ref="casFilter" />
            <entry key="logout" value-ref="logout" />
            <entry key="singleSignOutFilter" value-ref="singleSignOutFilter"/>
            <!--<entry key="user" value-ref="userAuthorizationFilter" />-->
        </util:map>
    </property>
    <property name="filterChainDefinitions">
        <value>
            /login/=casFilter
            /logout =singleSignOutFilter,logout
            /statics/**=anon
            /login/fail=anon
            /loginFail.html=anon
            /**=authc
        </value>
    </property>
</bean>
<bean name="singleSignOutFilter" class="com.hxy.shiro.filter.SingleSignOutFilter" />
<!--<bean id="userAuthorizationFilter"  class="com.hxy.shiro.filter.UserAuthorizationFilter"/>-->
<!-- shiro-cas登录过滤器 -->
<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
    <!-- 配置验证错误时的失败页面 ，这里配置为登录页面 -->
    <property name="failureUrl" value="${cas.server}?service=${cas.client}/loginFail.html" />
</bean>
<!-- 退出登录过滤器 -->
<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
    <property name="redirectUrl" value="${cas.server}/logout?service=${cas.server}/login?service=${cas.client}/index1.html" />
</bean>

<!-- 自定义casRealm -->
<bean id="casRealm" class="com.hxy.shiro.realm.MyCasRealm">
    <!-- <property name="defaultRoles" value="ROLE_USER" /> -->
    <!-- 配置cas服务器地址 -->
    <property name="casServerUrlPrefix" value="${cas.server}/" />
    <!-- 客户端的回调地址设置，必须和上面的shiro-cas过滤器casFilter拦截的地址一致 否则服务器会判断service不匹配 -->
    <property name="casService" value="${cas.client}/login/" />
</bean>

<!--缓存机制 -->
<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    <property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
</bean>

<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    <property name="realm" ref="casRealm" />
    <property name="subjectFactory" ref="casSubjectFactory" />
    <property name="cacheManager" ref="cacheManager" />
</bean>

<!-- 如果要实现cas的remember me的功能，需要用到下面这个bean，并设置到securityManager的subjectFactory中 -->
<bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory" />

<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
    <property name="arguments" ref="securityManager" />
</bean>
</beans>